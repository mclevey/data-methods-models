[
  {
    "objectID": "textbook/index.html",
    "href": "textbook/index.html",
    "title": "Data, Methods, and Models",
    "section": "",
    "text": "Everything is not fine.",
    "crumbs": [
      "Textbook",
      "Data, Methods, and Models"
    ]
  },
  {
    "objectID": "textbook/index.html#an-introduction-to-reproducible-quantitative-research-from-a-bayesian-perspective",
    "href": "textbook/index.html#an-introduction-to-reproducible-quantitative-research-from-a-bayesian-perspective",
    "title": "Data, Methods, and Models",
    "section": "An Introduction to Reproducible Quantitative Research from a Bayesian Perspective",
    "text": "An Introduction to Reproducible Quantitative Research from a Bayesian Perspective\nThis is an open educational resource… / free textbook accompanying my course Data, Methods, and Models.\nMore soon…\n\n\n\nEverything is not fine.",
    "crumbs": [
      "Textbook",
      "Data, Methods, and Models"
    ]
  },
  {
    "objectID": "textbook/chapters/preface.html",
    "href": "textbook/chapters/preface.html",
    "title": "Preface",
    "section": "",
    "text": "Preface\nThis is a book created from markdown and executable code.\nSee @knuth84 for additional discussion of literate programming.",
    "crumbs": [
      "Textbook",
      "Preface"
    ]
  },
  {
    "objectID": "slides/M12/slides.html#in-development",
    "href": "slides/M12/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M12/slides.html#documentation",
    "href": "slides/M12/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M12/slides.html#highlight-code",
    "href": "slides/M12/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M12/slides.html#highlight-code-1",
    "href": "slides/M12/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M12/slides.html#highlight-code-2",
    "href": "slides/M12/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M12/slides.html#section",
    "href": "slides/M12/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M12/slides.html#section-1",
    "href": "slides/M12/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M12/slides.html#footnotes",
    "href": "slides/M12/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M10/slides.html#in-development",
    "href": "slides/M10/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M10/slides.html#documentation",
    "href": "slides/M10/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M10/slides.html#highlight-code",
    "href": "slides/M10/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M10/slides.html#highlight-code-1",
    "href": "slides/M10/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M10/slides.html#highlight-code-2",
    "href": "slides/M10/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M10/slides.html#section",
    "href": "slides/M10/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M10/slides.html#section-1",
    "href": "slides/M10/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M10/slides.html#footnotes",
    "href": "slides/M10/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M08/slides.html#in-development",
    "href": "slides/M08/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M08/slides.html#documentation",
    "href": "slides/M08/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M08/slides.html#highlight-code",
    "href": "slides/M08/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M08/slides.html#highlight-code-1",
    "href": "slides/M08/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M08/slides.html#highlight-code-2",
    "href": "slides/M08/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M08/slides.html#section",
    "href": "slides/M08/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M08/slides.html#section-1",
    "href": "slides/M08/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M08/slides.html#footnotes",
    "href": "slides/M08/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M06/slides.html#in-development",
    "href": "slides/M06/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M06/slides.html#documentation",
    "href": "slides/M06/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M06/slides.html#highlight-code",
    "href": "slides/M06/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M06/slides.html#highlight-code-1",
    "href": "slides/M06/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M06/slides.html#highlight-code-2",
    "href": "slides/M06/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M06/slides.html#section",
    "href": "slides/M06/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M06/slides.html#section-1",
    "href": "slides/M06/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M06/slides.html#footnotes",
    "href": "slides/M06/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M04/slides.html#in-development",
    "href": "slides/M04/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M04/slides.html#documentation",
    "href": "slides/M04/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M04/slides.html#highlight-code",
    "href": "slides/M04/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M04/slides.html#highlight-code-1",
    "href": "slides/M04/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M04/slides.html#highlight-code-2",
    "href": "slides/M04/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M04/slides.html#section",
    "href": "slides/M04/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M04/slides.html#section-1",
    "href": "slides/M04/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M04/slides.html#footnotes",
    "href": "slides/M04/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M02/slides.html#in-development",
    "href": "slides/M02/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M02/slides.html#documentation",
    "href": "slides/M02/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M02/slides.html#highlight-code",
    "href": "slides/M02/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M02/slides.html#highlight-code-1",
    "href": "slides/M02/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M02/slides.html#highlight-code-2",
    "href": "slides/M02/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M02/slides.html#section",
    "href": "slides/M02/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M02/slides.html#section-1",
    "href": "slides/M02/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M02/slides.html#footnotes",
    "href": "slides/M02/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "FCIT 607 Data, Methods, and Models",
    "section": "",
    "text": "Coming soon…"
  },
  {
    "objectID": "articles/resources.html",
    "href": "articles/resources.html",
    "title": "Additional Resources",
    "section": "",
    "text": "Coming soon…"
  },
  {
    "objectID": "articles/modules/Module-01.html",
    "href": "articles/modules/Module-01.html",
    "title": "Module 01: Introduction",
    "section": "",
    "text": "Welcome to the orientation learning module for Data, Methods, and Models!",
    "crumbs": [
      "Module 01: Introduction"
    ]
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "Data, Methods, and Models",
    "section": "",
    "text": "MIT License\nCopyright (c) 2024 John McLevey\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "articles/about.html",
    "href": "articles/about.html",
    "title": "About",
    "section": "",
    "text": "About\nComing soon…"
  },
  {
    "objectID": "articles/syllabus.html",
    "href": "articles/syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Coming soon…"
  },
  {
    "objectID": "slides/M01/slides.html#in-development",
    "href": "slides/M01/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M01/slides.html#documentation",
    "href": "slides/M01/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M01/slides.html#highlight-code",
    "href": "slides/M01/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M01/slides.html#highlight-code-1",
    "href": "slides/M01/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M01/slides.html#highlight-code-2",
    "href": "slides/M01/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M01/slides.html#section",
    "href": "slides/M01/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M01/slides.html#section-1",
    "href": "slides/M01/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M01/slides.html#footnotes",
    "href": "slides/M01/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M03/slides.html#in-development",
    "href": "slides/M03/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M03/slides.html#documentation",
    "href": "slides/M03/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M03/slides.html#highlight-code",
    "href": "slides/M03/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M03/slides.html#highlight-code-1",
    "href": "slides/M03/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M03/slides.html#highlight-code-2",
    "href": "slides/M03/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M03/slides.html#section",
    "href": "slides/M03/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M03/slides.html#section-1",
    "href": "slides/M03/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M03/slides.html#footnotes",
    "href": "slides/M03/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M05/slides.html#in-development",
    "href": "slides/M05/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M05/slides.html#documentation",
    "href": "slides/M05/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M05/slides.html#highlight-code",
    "href": "slides/M05/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M05/slides.html#highlight-code-1",
    "href": "slides/M05/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M05/slides.html#highlight-code-2",
    "href": "slides/M05/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M05/slides.html#section",
    "href": "slides/M05/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M05/slides.html#section-1",
    "href": "slides/M05/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M05/slides.html#footnotes",
    "href": "slides/M05/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M07/slides.html#in-development",
    "href": "slides/M07/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M07/slides.html#documentation",
    "href": "slides/M07/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M07/slides.html#highlight-code",
    "href": "slides/M07/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M07/slides.html#highlight-code-1",
    "href": "slides/M07/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M07/slides.html#highlight-code-2",
    "href": "slides/M07/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M07/slides.html#section",
    "href": "slides/M07/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M07/slides.html#section-1",
    "href": "slides/M07/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M07/slides.html#footnotes",
    "href": "slides/M07/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M09/slides.html#in-development",
    "href": "slides/M09/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M09/slides.html#documentation",
    "href": "slides/M09/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M09/slides.html#highlight-code",
    "href": "slides/M09/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M09/slides.html#highlight-code-1",
    "href": "slides/M09/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M09/slides.html#highlight-code-2",
    "href": "slides/M09/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M09/slides.html#section",
    "href": "slides/M09/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M09/slides.html#section-1",
    "href": "slides/M09/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M09/slides.html#footnotes",
    "href": "slides/M09/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "slides/M11/slides.html#in-development",
    "href": "slides/M11/slides.html#in-development",
    "title": "Module XXX",
    "section": "In Development",
    "text": "In Development\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "slides/M11/slides.html#documentation",
    "href": "slides/M11/slides.html#documentation",
    "title": "Module XXX",
    "section": "Documentation",
    "text": "Documentation\n\nPresenations with Quarto\nSee also basic reveal.js stuff, can port over old content.\nYou can have footnotes.1\nAnother2"
  },
  {
    "objectID": "slides/M11/slides.html#highlight-code",
    "href": "slides/M11/slides.html#highlight-code",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 6-8.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M11/slides.html#highlight-code-1",
    "href": "slides/M11/slides.html#highlight-code-1",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nSee lines 7 and 9.\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M11/slides.html#highlight-code-2",
    "href": "slides/M11/slides.html#highlight-code-2",
    "title": "Module XXX",
    "section": "Highlight Code",
    "text": "Highlight Code\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "slides/M11/slides.html#section",
    "href": "slides/M11/slides.html#section",
    "title": "Module XXX",
    "section": "",
    "text": "Hi..."
  },
  {
    "objectID": "slides/M11/slides.html#section-1",
    "href": "slides/M11/slides.html#section-1",
    "title": "Module XXX",
    "section": "",
    "text": "print('Hi...')\n\nHi...\n\n\n\n\n\n\nhttps://www.johnmclevey.com/data-methods-models/"
  },
  {
    "objectID": "slides/M11/slides.html#footnotes",
    "href": "slides/M11/slides.html#footnotes",
    "title": "Module XXX",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee how it works?\nYep."
  },
  {
    "objectID": "textbook/chapters/introduction.html",
    "href": "textbook/chapters/introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Introduction\nComing soon…",
    "crumbs": [
      "Textbook",
      "Introduction"
    ]
  },
  {
    "objectID": "textbook/chapters/references.html",
    "href": "textbook/chapters/references.html",
    "title": "References",
    "section": "",
    "text": "References",
    "crumbs": [
      "Textbook",
      "References"
    ]
  }
]